apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress-custom-headers
  namespace: kube-system
data:
  X-Cotoami-Message: "Hello"
  X-Cotoami-X-Forwarded-For: ${http_x_forwarded_for}
  X-Cotoami-Remote-Addr: ${remote_addr}
  X-Cotoami-Realip-Remote-Addr: ${realip_remote_addr}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-ingress
  namespace: kube-system
data:
  real-client-from: "http-proxy"
  proxy-real-ip-cidr: "172.20.0.0/16,100.64.0.0/10"
  proxy-set-headers: "kube-system/nginx-ingress-custom-headers"
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: nginx-ingress-controller
  labels:
    name: nginx-ingress-controller
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        name: nginx-ingress-controller
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - image: gcr.io/google_containers/nginx-ingress-controller:0.9.0-beta.14
        name: nginx-ingress-controller
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 10254
          hostPort: 10254
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --configmap=$(POD_NAMESPACE)/nginx-ingress
